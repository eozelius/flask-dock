{"remainingRequest":"/Users/ethan/vue/minesweeper/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ethan/vue/minesweeper/src/components/Board.vue?vue&type=style&index=0&id=e1ee1034&lang=scss&scoped=true&","dependencies":[{"path":"/Users/ethan/vue/minesweeper/src/components/Board.vue","mtime":1549573613986},{"path":"/Users/ethan/vue/minesweeper/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/ethan/vue/minesweeper/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/ethan/vue/minesweeper/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/ethan/vue/minesweeper/node_modules/sass-loader/lib/loader.js","mtime":1533139052000},{"path":"/Users/ethan/vue/minesweeper/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ethan/vue/minesweeper/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.board-container {\n  width: 50%;\n  border: 1px solid #ccc;\n  margin: 3% auto 5%;\n  padding: 1% 2% 5%;\n}\n\n.row {\n  display: flex;\n}\n\n.col {\n  flex-grow: 1;\n}\n",{"version":3,"sources":["Board.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoHA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"Board.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"board-container\">\n    <h1>{{ title }}</h1>\n    <div class=\"row\" v-for=\"(row, i) in board\" :key=\"i\">\n      <div class=\"col\" v-for=\"(col, j) in row\" :key=\"j\">\n        <Cell\n          :value=\"col.value\"\n          :active=\"col.active\"\n          :row=\"i\"\n          :col=\"j\"\n          v-on:cell-clicked=\"handleClick\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport _ from 'lodash';\nimport Cell from \"@/components/Cell.vue\";\n\nexport default {\n  name: \"Board\",\n  data: () => {\n    return {\n      title: \"Minesweeper\",\n      board: []\n    };\n  },\n\n  mounted() {\n    this.generateBoard(2, 2, 1);\n  },\n\n  methods: {\n    randomNum: max => {\n      // return a random number between 0 and max inclusively\n      return Math.floor(Math.random() * Math.floor(max));\n    },\n\n    generateBoard(rows, cols, mines) {\n      const getAvailableCells = () => {\n        const availableCells = [];\n        for(let i = 0; i < rows; i++) {\n          for(let j = 0; j < cols; j++) {\n            if(this.board[i][j].value === '_'){\n              availableCells.push([i, j])\n            }\n          }\n        }\n        return availableCells;\n      }\n      \n      // Initialize board to empty\n      for (let r = 0; r < rows; r++) {\n        this.board.push(new Array(cols).fill({\n          value: \"_\",\n          active: true,\n        }));\n      }\n\n      console.log('finished initializing board.')\n      console.log(this.board)\n\n\n      // Place mines\n      for(let m = 0; m < 1; m++) {\n        console.log(`[${m}] mines`)\n\n        const availableCells = getAvailableCells();\n        console.log('availableCells');\n        console.log(availableCells);\n        console.log('number of options: ' + availableCells.length);\n        \n        const randomCell = this.randomNum(availableCells.length);\n        console.log('randomCell => ', randomCell)\n        \n        const selectedCell = availableCells[randomCell];\n        console.log('selected Cell => ' + JSON.stringify(selectedCell));\n\n        const selectedRow = selectedCell[0]\n        console.log('selectedRow => ' + JSON.stringify(selectedRow))\n        const selectedCol = selectedCell[1]\n        console.log('selectedCol => ' + selectedCol)\n        \n        // console.log(JSON.stringify(this.board[selectedRow][selectedCol]))\n        \n        // this.board[0][0].value = 'x'\n\n        const clonedBoard = _.deepClone(this.board);\n\n        clonedBoard[0][0].value = 'x';\n\n        console.log(JSON.parse(JSON.stringify(clonedBoard)))\n\n        // console.log(JSON.parse(JSON.stringify(this.board)))\n\n        // console.log(this.board)\n\n\n        // console.log(this.board[selectedRow][selectedCol].value = \"A\")\n      }\n    },\n\n    handleClick(row, col){\n      console.log('handleing click row: ' + row + ' col: ' + col);\n    }\n  },\n\n  components: {\n    Cell\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.board-container {\n  width: 50%;\n  border: 1px solid #ccc;\n  margin: 3% auto 5%;\n  padding: 1% 2% 5%;\n}\n\n.row {\n  display: flex;\n}\n\n.col {\n  flex-grow: 1;\n}\n</style>\n"]}]}